{"version":3,"sources":["utils/generateRandomIntArray.ts","utils/bubbleSort.ts","App.tsx","index.tsx"],"names":["generateRandomIntArray","elementsNumber","Array","map","Math","round","random","swap","array","a","b","temp","bubbleSort","length","swapped","i","j","App","state","divList","intervalId","undefined","isSorting","onClickHandler","sortingInterval","setInterval","newSortedList","setState","clearInterval","onChangeHandler","e","value","target","Number","this","className","type","onChange","disabled","onClick","item","style","height","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAIeA,EAJgB,SAACC,GAAD,OAC3B,YAAI,IAAIC,MAAMD,IAAiBE,KAAI,kBAAsC,GAAhCC,KAAKC,MAAsB,EAAhBD,KAAKE,UAAqB,OCD5EC,EAAO,SAACC,EAAiBC,EAAWC,GACtC,IAAMC,EAAOH,EAAMC,GAGnB,OAFAD,EAAMC,GAAKD,EAAME,GACjBF,EAAME,GAAKC,EACJH,GAsBII,EAnBI,SAASJ,GAG3B,IAFA,IAAMK,EAASL,EAAMK,OACjBC,GAAU,EACLC,EAAI,EAAGA,EAAIF,EAAQE,IAAI,CAC/BD,GAAU,EACV,IAAK,IAAIE,EAAI,EAAGA,EAAIH,EAASE,EAAI,EAAGC,IACnC,GAAIR,EAAMQ,GAAKR,EAAMQ,EAAI,GAGZ,OADZF,GAAU,EADVN,EAAQD,EAAKC,EAAOQ,EAAGA,EAAI,GAM7B,IAAKF,EACJ,Q,OCRkBG,E,4MACnBC,MAAQ,CACNC,QAASnB,EAAuB,IAChCoB,gBAAYC,EACZC,WAAW,G,EAGbC,eAAiB,WAEf,IAAMC,EAAkBC,aAAY,WAAO,IAAD,EACR,EAAKP,MAA7BC,EADgC,EAChCA,QAASC,EADuB,EACvBA,WACXM,EAAgBd,EAAWO,GAEjC,GAAIO,EACF,OAAO,EAAKC,SAAS,CAAER,QAASO,IAGlCE,cAAcR,GACd,EAAKO,SAAS,CACZL,WAAW,MAEZ,KAEH,EAAKK,SAAS,CACZP,WAAYI,EACZF,WAAW,K,EAIfO,gBAAkB,SAACC,GAAkD,IACjDC,EAAWD,EAArBE,OAAUD,MAElB,EAAKJ,SAAS,CACZR,QAASnB,EAAuBiC,OAAOF,O,4CAI3C,WAAU,IAAD,EACwBG,KAAKhB,MAA5BC,EADD,EACCA,QAASG,EADV,EACUA,UAEjB,OACE,sBAAKa,UAAU,UAAf,UACE,qBAAKA,UAAU,QAAf,SACE,oDAEE,uBACEC,KAAK,SACLL,MAAQZ,EAAQN,OAChBwB,SAAWH,KAAKL,gBAChBS,SAAWhB,SAIjB,wBACEa,UAAU,SACVI,QAAUL,KAAKX,eACfe,SAAWhB,EAHb,SAKIA,EAAY,cAAgB,kBAEhC,qBAAKa,UAAU,eAAf,SACIhB,EAAQhB,KAAI,SAACqC,GAAD,OACZ,qBAAKC,MAAO,CAAEC,OAAQF,GAAQL,UAAU,qB,GA9DnBQ,IAAMC,WCRvCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.70470253.chunk.js","sourcesContent":["const generateRandomIntArray = (elementsNumber: number) => (\n    [...new Array(elementsNumber)].map(() => Math.round(Math.random() * 8) * 30 + 15)\n)\n\nexport default generateRandomIntArray;\n","const swap = (array: number[], a: number, b: number) => {\n    const temp = array[a];\n    array[a] = array[b];\n    array[b] = temp;\n    return array;\n};\n\nconst bubbleSort = function(array: number[]){\n\tconst length = array.length;\n\tlet swapped = false;\n\tfor (let i = 0; i < length; i++){\n\t\tswapped = false;\n\t\tfor (let j = 0; j < length - i - 1; j++){\n\t\t\tif (array[j] > array[j + 1] ){\n\t\t\t\tarray = swap(array, j, j + 1);\n\t\t\t\tswapped = true;\n                return array;\n\t\t\t};\n\t\t}\n\n\t\tif (!swapped){\n\t\t\tbreak;\n\t\t}\n\t}\n};\n\nexport default bubbleSort;\n","import React from 'react';\nimport './App.css';\nimport generateRandomIntArray from './utils/generateRandomIntArray';\nimport bubbleSort from './utils/bubbleSort';\n\ntype AppState = {\n  divList: number[];\n  intervalId?: NodeJS.Timeout;\n  isSorting: boolean;\n};\n\ntype AppProps = {};\n\nexport default class App extends React.Component<AppProps, AppState> {\n  state = {\n    divList: generateRandomIntArray(25),\n    intervalId: undefined,\n    isSorting: false\n  };\n\n  onClickHandler = (): void => {\n\n    const sortingInterval = setInterval(() => {\n      const { divList, intervalId } = this.state;\n      const newSortedList = bubbleSort(divList);\n\n      if (newSortedList) {\n        return this.setState({ divList: newSortedList })\n      }\n\n      clearInterval(intervalId);\n      this.setState({\n        isSorting: false\n      });\n    }, 100);\n\n    this.setState({\n      intervalId: sortingInterval,\n      isSorting: true\n    })\n  };\n\n  onChangeHandler = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const { target: { value }} = e;\n\n    this.setState({\n      divList: generateRandomIntArray(Number(value))\n    })\n  }\n\n  render() {\n    const { divList, isSorting } = this.state;\n\n    return (\n      <div className='wrapper'>\n        <div className='input'>\n          <label>\n            Number of items\n            <input\n              type=\"number\"\n              value={ divList.length }\n              onChange={ this.onChangeHandler }\n              disabled={ isSorting }\n            />\n          </label>\n        </div>\n        <button\n          className='button'\n          onClick={ this.onClickHandler }\n          disabled={ isSorting }\n        >\n          { isSorting ? 'Please wait' : 'Start sorting' }\n        </button>\n        <div className='list-wrapper'>\n          { divList.map((item) => (\n            <div style={{ height: item }} className='item' />\n          )) }\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}